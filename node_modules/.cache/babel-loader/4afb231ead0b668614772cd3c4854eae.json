{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jose_\\\\OneDrive\\\\Documentos\\\\Checkpoints, Homeworks, Ejercisios etc - Henry\\\\PI VideoGames\\\\PI-Videogames-main\\\\client\\\\src\\\\Components\\\\Videogames\\\\videogames.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n// import ReactPaginate from \"react-paginate\";\nimport style from \"./videogame.module.css\";\nimport { useState } from \"react\";\n// import { useEffect } from \"react\";\n\n// { gameOffset, setGameOffset }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Videogames() {\n  _s();\n  const videogames = useSelector(state => state.videogames);\n  const allVideogames = useSelector(state => state.videogamesBackUp);\n  console.log(videogames);\n  console.log(allVideogames);\n  const [start, setStart] = useState(0);\n  const [current, setCurrent] = useState(0);\n  // const [end, setEnd] = useState()\n\n  const quantity = 15;\n  const total = Math.ceil(videogames.length / quantity);\n  const pages = Array(total).fill(undefined);\n  const gamesDisplayed = videogames.slice(start, start + quantity);\n  const change = event => {\n    const value = event.target.value;\n    setCurrent(value);\n    if (videogames.length > quantity) setStart(start + quantity);\n  };\n\n  // useEffect(() => {\n  //   setGameOffset(0);\n  // }, [videogames]);\n\n  // const gamesPerPage = 15;\n  // const endOffset = gameOffset + gamesPerPage;\n  // const currentGames = videogames.slice(gameOffset, endOffset);\n  // const pageCount = Math.ceil(videogames.length / gamesPerPage);\n\n  // const handlePageClick = (event) => {\n  //   const newOffset = (event.selected * gamesPerPage) % videogames.length;\n  //   setGameOffset(newOffset);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.cards,\n      children: !allVideogames.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loading,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.loadingInner,\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : !videogames.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loading,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: style.loadingInner,\n          children: \"Games not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : gamesDisplayed.map(games => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.game,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: style.image,\n            src: games.image,\n            alt: games.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.text,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/detail/${games.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: style.name,\n                children: games.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: games.genres.map((genre, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: genre\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this), \" \", i < games.genres.length - 1 && \"   \"]\n              }, void 0, true))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, games.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: pages.map((el, i) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          value: i + 1,\n          onClick: i + 1,\n          children: current\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 42\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Videogames, \"U75sjVKLl804kpSbZZqjm5e2o14=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Videogames;\nexport default Videogames;\nvar _c;\n$RefreshReg$(_c, \"Videogames\");","map":{"version":3,"names":["Link","useSelector","style","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Videogames","_s","videogames","state","allVideogames","videogamesBackUp","console","log","start","setStart","current","setCurrent","quantity","total","Math","ceil","length","pages","Array","fill","undefined","gamesDisplayed","slice","change","event","value","target","children","className","cards","loading","loadingInner","fileName","_jsxFileName","lineNumber","columnNumber","map","games","game","image","src","alt","name","text","to","id","genres","genre","i","el","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jose_/OneDrive/Documentos/Checkpoints, Homeworks, Ejercisios etc - Henry/PI VideoGames/PI-Videogames-main/client/src/Components/Videogames/videogames.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n// import ReactPaginate from \"react-paginate\";\r\nimport style from \"./videogame.module.css\";\r\nimport { useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n\r\n// { gameOffset, setGameOffset }\r\nfunction Videogames() {\r\n  const videogames = useSelector((state) => state.videogames);\r\n  const allVideogames = useSelector((state) => state.videogamesBackUp);\r\n  console.log(videogames);\r\n  console.log(allVideogames);\r\n\r\n  const [start, setStart] = useState(0);\r\n  const [current, setCurrent] = useState(0)\r\n  // const [end, setEnd] = useState()\r\n\r\n\r\n  const quantity = 15;\r\n  const total = Math.ceil(videogames.length / quantity);\r\n  const pages =  Array(total).fill(undefined)\r\n\r\n  const gamesDisplayed = videogames.slice(start, start + quantity)\r\n\r\n  const change = (event) => { \r\n    const value = event.target.value\r\n    setCurrent(value)\r\n    if (videogames.length > quantity ) setStart(start + quantity)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   setGameOffset(0);\r\n  // }, [videogames]);\r\n\r\n  // const gamesPerPage = 15;\r\n  // const endOffset = gameOffset + gamesPerPage;\r\n  // const currentGames = videogames.slice(gameOffset, endOffset);\r\n  // const pageCount = Math.ceil(videogames.length / gamesPerPage);\r\n\r\n  // const handlePageClick = (event) => {\r\n  //   const newOffset = (event.selected * gamesPerPage) % videogames.length;\r\n  //   setGameOffset(newOffset);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className={style.cards}>\r\n        {!allVideogames.length ? (\r\n          <div className={style.loading}>\r\n            <span className={style.loadingInner}>Loading...</span>\r\n          </div>\r\n        ) : !videogames.length ? (\r\n          <div className={style.loading}>\r\n            <span className={style.loadingInner}>Games not found</span>\r\n          </div>\r\n        ) : (\r\n          gamesDisplayed.map((games) => {\r\n            return (\r\n              <div className={style.game} key={games.id}>\r\n                <img\r\n                  className={style.image}\r\n                  src={games.image}\r\n                  alt={games.name}\r\n                />\r\n                <div className={style.text}>\r\n                  <Link to={`/detail/${games.id}`}>\r\n                    <h3 className={style.name}>{games.name}</h3>\r\n                  </Link>\r\n                  <div>\r\n                    {games.genres.map((genre, i) => (\r\n                      <>\r\n                        <span key={i}>{genre}</span>{\" \"}\r\n                        {i < games.genres.length - 1 && \"   \"}\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n      <div>{pages.map((el, i) => {return <button key={i} value={i + 1} onClick={i + 1}>{current}</button>})}</div>\r\n\r\n      {/* <ReactPaginate\r\n        previousLabel=\"< previous\"\r\n        nextLabel=\"next >\"\r\n        breakLabel=\"...\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={1}\r\n        pageCount={pageCount}\r\n        renderOnZeroPageCount={null}\r\n        containerClassName={style.paginateContainer}\r\n        pageClassName={style.page}\r\n        activeClassName={style.active}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Videogames;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}