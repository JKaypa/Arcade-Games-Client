{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3001\";\nexport const ALL_GAMES = \"ALL_GAMES\";\nexport const GAME_BY_ID = \"GAME_BY_ID\";\nexport const CRETATE_GAME = \"CREATE_GAME\";\nexport const UPDATE_GAME = \"UPDATE_GAME\";\nexport const DELETE_GAME = \"DELETE_GAME\";\nexport const RESTART = \"RESTART\";\nexport const RESTORE = 'RESTORE';\nexport const GENRES = \"GENRES\";\nexport const allGames = function () {\n  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios(`/videogames?name=${name}`);\n    dispatch({\n      type: ALL_GAMES,\n      payload: data\n    });\n  };\n};\nexport const gameById = id => {\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios(`/videogames/${id}`);\n    dispatch({\n      type: GAME_BY_ID,\n      payload: data\n    });\n  };\n};\nexport const createGame = game => {\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios.post(\"/videogames\", game);\n    dispatch({\n      type: CRETATE_GAME,\n      payload: data\n    });\n  };\n};\nexport const updateGame = (id, game) => {\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios.put(`/videogames/${id}`, game);\n    dispatch({\n      type: UPDATE_GAME,\n      payload: data\n    });\n  };\n};\nexport const deleteGame = id => {\n  return async function (dispatch) {\n    const {\n      data\n    } = await axios.delete(`/videogames/${id}`);\n    dispatch({\n      type: DELETE_GAME,\n      payload: data\n    });\n  };\n};\nexport const restart = () => {\n  return function (dispatch) {\n    dispatch({\n      type: RESTART\n    });\n  };\n};\nexport const restore = () => {\n  return function (dispatch) {\n    dispatch({\n      type: RESTORE,\n      payload: ''\n    });\n  };\n};","map":{"version":3,"names":["axios","defaults","baseURL","ALL_GAMES","GAME_BY_ID","CRETATE_GAME","UPDATE_GAME","DELETE_GAME","RESTART","RESTORE","GENRES","allGames","name","arguments","length","undefined","dispatch","data","type","payload","gameById","id","createGame","game","post","updateGame","put","deleteGame","delete","restart","restore"],"sources":["C:/Users/jose_/OneDrive/Documentos/Checkpoints, Homeworks, Ejercisios etc - Henry/PI VideoGames/PI-Videogames-main/client/src/Redux/Actions.js"],"sourcesContent":["import axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3001\";\r\n\r\nexport const ALL_GAMES = \"ALL_GAMES\";\r\nexport const GAME_BY_ID = \"GAME_BY_ID\";\r\nexport const CRETATE_GAME = \"CREATE_GAME\";\r\nexport const UPDATE_GAME = \"UPDATE_GAME\";\r\nexport const DELETE_GAME = \"DELETE_GAME\";\r\nexport const RESTART = \"RESTART\";\r\nexport const RESTORE = 'RESTORE';\r\n\r\nexport const GENRES = \"GENRES\";\r\n\r\nexport const allGames = (name = \"\") => {\r\n  return async function (dispatch) {\r\n    const { data } = await axios(`/videogames?name=${name}`);\r\n    dispatch({ type: ALL_GAMES, payload: data });\r\n  };\r\n};\r\n\r\nexport const gameById = (id) => {\r\n  return async function (dispatch) {\r\n    const { data } = await axios(`/videogames/${id}`);\r\n    dispatch({ type: GAME_BY_ID, payload: data });\r\n  };\r\n};\r\n\r\nexport const createGame = (game) => {\r\n  return async function (dispatch) {\r\n    const { data } = await axios.post(\"/videogames\", game);\r\n    dispatch({ type: CRETATE_GAME, payload: data });\r\n  };\r\n};\r\n\r\nexport const updateGame = (id, game) => {\r\n  return async function (dispatch) {\r\n    const { data } = await axios.put(`/videogames/${id}`, game);\r\n    dispatch({ type: UPDATE_GAME, payload: data });\r\n  };\r\n};\r\n\r\nexport const deleteGame = (id) => {\r\n  return async function (dispatch) {\r\n    const { data } = await axios.delete(`/videogames/${id}`);\r\n    dispatch({ type: DELETE_GAME, payload: data });\r\n  };\r\n};\r\n\r\nexport const restart = () => {\r\n  return function (dispatch) {\r\n    dispatch({ type: RESTART });\r\n  };\r\n};\r\n\r\nexport const restore = () => {\r\n  return function (dispatch) {\r\n    dispatch({type: RESTORE, payload: ''})\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,YAAY,GAAG,aAAa;AACzC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,OAAO,GAAG,SAAS;AAChC,OAAO,MAAMC,OAAO,GAAG,SAAS;AAEhC,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAE9B,OAAO,MAAMC,QAAQ,GAAG,SAAAA,CAAA,EAAe;EAAA,IAAdC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAChC,OAAO,gBAAgBG,QAAQ,EAAE;IAC/B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAAE,oBAAmBY,IAAK,EAAC,CAAC;IACxDI,QAAQ,CAAC;MAAEE,IAAI,EAAEf,SAAS;MAAEgB,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC9C,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAIC,EAAE,IAAK;EAC9B,OAAO,gBAAgBL,QAAQ,EAAE;IAC/B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAAE,eAAcqB,EAAG,EAAC,CAAC;IACjDL,QAAQ,CAAC;MAAEE,IAAI,EAAEd,UAAU;MAAEe,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC/C,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,UAAU,GAAIC,IAAI,IAAK;EAClC,OAAO,gBAAgBP,QAAQ,EAAE;IAC/B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAACwB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;IACtDP,QAAQ,CAAC;MAAEE,IAAI,EAAEb,YAAY;MAAEc,OAAO,EAAEF;IAAK,CAAC,CAAC;EACjD,CAAC;AACH,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAGA,CAACJ,EAAE,EAAEE,IAAI,KAAK;EACtC,OAAO,gBAAgBP,QAAQ,EAAE;IAC/B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAAC0B,GAAG,CAAE,eAAcL,EAAG,EAAC,EAAEE,IAAI,CAAC;IAC3DP,QAAQ,CAAC;MAAEE,IAAI,EAAEZ,WAAW;MAAEa,OAAO,EAAEF;IAAK,CAAC,CAAC;EAChD,CAAC;AACH,CAAC;AAED,OAAO,MAAMU,UAAU,GAAIN,EAAE,IAAK;EAChC,OAAO,gBAAgBL,QAAQ,EAAE;IAC/B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMjB,KAAK,CAAC4B,MAAM,CAAE,eAAcP,EAAG,EAAC,CAAC;IACxDL,QAAQ,CAAC;MAAEE,IAAI,EAAEX,WAAW;MAAEY,OAAO,EAAEF;IAAK,CAAC,CAAC;EAChD,CAAC;AACH,CAAC;AAED,OAAO,MAAMY,OAAO,GAAGA,CAAA,KAAM;EAC3B,OAAO,UAAUb,QAAQ,EAAE;IACzBA,QAAQ,CAAC;MAAEE,IAAI,EAAEV;IAAQ,CAAC,CAAC;EAC7B,CAAC;AACH,CAAC;AAED,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAM;EAC3B,OAAO,UAAUd,QAAQ,EAAE;IACzBA,QAAQ,CAAC;MAACE,IAAI,EAAET,OAAO;MAAEU,OAAO,EAAE;IAAE,CAAC,CAAC;EACxC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}